# -*- coding: utf-8 -*-
"""Aitask7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WR8tQjwJGaslhlo-tyQG6C6dxkMVbVyi
"""

# Constants
NUM_CHARITIES = 3
EXIT_OPTION = -1

# Initialize charity names and totals
charity_names = []
charity_totals = [0] * NUM_CHARITIES

# Function to set up the donation system
def setup_donation_system():
    print("Welcome to the Supermarket Donation System!")

    # Input charity names
    for i in range(NUM_CHARITIES):
        charity_name = input(f"Enter the name of charity {i + 1}: ")
        charity_names.append(charity_name)

    # Display charity names with numbers
    for i, name in enumerate(charity_names, 1):
        print(f"{i}. {name}")

# Function to record and total each donation
def record_and_total_donation():
    while True:
        # Input charity choice
        charity_choice = int(input("Enter the number of the chosen charity (1, 2, or 3), or -1 to show totals: "))

        # Check for exit option
        if charity_choice == EXIT_OPTION:
            break

        # Validate charity choice
        if 1 <= charity_choice <= NUM_CHARITIES:
            # Input shopping bill
            shopping_bill = float(input("Enter the customer's shopping bill amount: "))

            # Calculate donation
            donation = shopping_bill * 0.01

            # Add donation to the appropriate total
            charity_totals[charity_choice - 1] += donation

            # Output donation information
            print(f"Donation of ${donation:.2f} recorded for {charity_names[charity_choice - 1]}.")

# Function to show the totals so far
def show_totals():
    print("\nCharity Totals:")

    # Create a list of tuples (charity_name, charity_total)
    totals_info = list(zip(charity_names, charity_totals))

    # Sort the list in descending order of totals
    totals_info.sort(key=lambda x: x[1], reverse=True)

    # Display sorted totals
    for name, total in totals_info:
        print(f"{name}: ${total:.2f}")

    # Calculate and display the grand total
    grand_total = sum(charity_totals)
    print(f"\nGRAND TOTAL DONATED TO CHARITY: ${grand_total:.2f}")

# Main program
setup_donation_system()
record_and_total_donation()1
show_totals()

